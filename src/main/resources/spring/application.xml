<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"

	xsi:schemaLocation="http://www.springframework.org/schema/beans
				       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
				       http://www.springframework.org/schema/context
				       http://www.springframework.org/schema/context/spring-context-4.0.xsd
				       http://www.springframework.org/schema/aop
				       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
				       http://www.springframework.org/schema/mvc
				       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
				       http://www.springframework.org/schema/tx 
					   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
				       http://www.springframework.org/schema/cache
				       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd ">


	<!-- <import resource="classpath:spring/application-session.xml"/> -->
	<!-- <import resource="classpath:spring/application-shiro.xml"/> <import 
		resource="classpath:spring/application-mybatis-thinglinx.xml"/> -->


	  <context:property-placeholder location="classpath:spring/config.properties"/>  
	  
	  <bean id="web_site"  class="java.lang.String"  >
	  	   <constructor-arg  value="${website_location}" />
	   </bean>

	<!-- OSS Client -->

	<bean class="com.aliyun.oss.OSSClient" id="oss-client"> 
		<constructor-arg index="0" value="${oss_url}" />

		<constructor-arg index="1" value="${oss_username}" />
		<constructor-arg index="2" value="${oss_password}" />
	</bean> 

	<!-- Oss 封装类 -->
	<bean class="com.sunwayland.web.albb.ThinglinxOss">
		<property name="client" ref="oss-client" />
		<property name="bocketName" value="${oss_bocketname}" />
	</bean>



	<!-- 扫描注解Bean -->
	<context:component-scan base-package="com.sunwayland.web">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
	</context:component-scan>

	<bean class="com.sunwayland.core.utils.RandPicture">
	</bean>

	<bean class="com.sunwayland.rest.ThingLinxRest"> 
	        <constructor-arg name="httpsUrl" value="${rest_https}"  /> 
		   	<constructor-arg name="httpUrl" value="${rest_http}" />
		   	<constructor-arg name="keyStoreFilePath" value="${ssl_key_store}" />  
			<constructor-arg name="keyStorePassword" value="${ssl_key}" /> 
	</bean>


	<bean class="com.google.gson.Gson"></bean>








	<!-- Cache配置 放到 ACE 要 换成 Ace 的cache ; -->

	<!-- <cache:annotation-driven cache-manager="cacheManager" /> <bean id="ehCacheManagerFactory" 
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="classpath:ehcache/ehcache.xml" 
		/> <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" 
		p:cacheManager-ref="ehCacheManagerFactory" /> -->



	<!-- <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/> 
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" 
		/> <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor"/> <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager"/> </bean> -->


	<!-- hibernamte -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/> <property name="configLocation" 
		value="classpath:hibernate.cfg.xml"/> <property name="packagesToScan" value="com.sunwayland.po"></property> 
		</bean> -->

  





</beans>
